name: main

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up python 3.9
      id: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Cache Poetry virtualenv
      id: virtualenv-cache
      uses: actions/cache@v2
      with:
        path: .venv
        key: poetry-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ steps.setup-python.outputs.python-version }}-
    - name: Cache veekun database
      id: veekun-cache
      uses: actions/cache@v2
      with:
        path: veekun.sqlite
        key: veekun-${{ hashFiles('cerbottana/data/veekun/*.csv', 'cerbottana/databases/veekun.py', 'cerbottana/tasks/veekun.py') }}
    - name: Install Poetry
      run: pipx install poetry
    - name: Setup the virtual environment
      run: |
        poetry config --local virtualenvs.in-project true
        poetry env use "$(which python)"
    - name: Install dependencies on a cache miss
      if: steps.virtualenv-cache.outputs.cache-hit != 'true'
      run: poetry install --remove-untracked
    - name: Mark the veekun database as up-to-date on a cache hit
      if: steps.veekun-cache.outputs.cache-hit == 'true'
      run: sqlite3 veekun.sqlite "UPDATE latest_commit SET commit_id = '$GITHUB_SHA';"
    - name: Check import order
      run: poetry run poe isort_check
    - name: Check formatting using black
      run: poetry run poe black_check
    - name: Check docstrings with darglint
      run: poetry run poe darglint
    - name: Test with mypy
      run: poetry run poe mypy
    - name: Test with pylint
      run: poetry run poe pylint
    - name: Test with pytest
      run: poetry run poe pytest --cov --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
