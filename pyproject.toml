[project]
name = "cerbottana"
version = "0.1.0"
requires-python = ">=3.13"
dependencies = [
    "aiohttp==3.11.11",
    "domify==0.4.5",
    "imageprobe==0.3.0",
    "pokedex[asyncio] @ https://github.com/Parnassius/pokedex.git",
    "python-dateutil==2.9.0.post0",
    "sqlalchemy==2.0.36",
    "typenv==0.2.0",
]

[project.scripts]
cerbottana = "cerbottana.__main__:main"

[dependency-groups]
dev = [
    "darglint==1.8.1",
    "freezegun==1.5.1",
    "mypy==1.14.1",
    "poethepoet==0.32.0",
    "pytest==8.3.4",
    "pytest-asyncio==0.25.0",
    "pytest-cov==6.0.0",
    "pytest-mock==3.14.0",
    "pytest-xprocess==1.0.2",
    "python-dotenv[cli]==1.0.1",
    "ruff==0.8.4",
    "types-python-dateutil==2.9.0.20241206",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:"]

[tool.coverage.run]
relative_files = true
source = ["src/cerbottana"]


[tool.hatch.metadata]
allow-direct-references = true


[tool.mypy]
python_version = "3.13"
strict = true
implicit_reexport = true

# Disallow dynamic typing
disallow_any_unimported = true
#disallow_any_expr = true
#disallow_any_decorated = true
disallow_any_explicit = true

show_error_codes = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_any_explicit = false
disallow_untyped_defs = false
disallow_incomplete_defs = false


[tool.pytest.ini_options]
addopts = "--strict-config --strict-markers"
markers = ["integration"]
asyncio_mode = "auto"
xfail_strict = true


[tool.ruff.lint]
select = [
    "A",     # flake8-builtins
    "ARG",   # flake8-unused-arguments
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle
    "EM",    # flake8-errmsg
    "F",     # pyflakes
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "ISC",   # flake8-implicit-str-concat
    "N",     # pep8-naming
    "PGH",   # pygrep-hooks
    "PTH",   # flake8-use-pathlib
    "RET",   # flake8-return
    "RUF",   # Ruff-specific rules
    "T10",   # flake8-debugger
    "TID",   # flake8-tidy-imports
    "TRY",   # tryceratops
    "UP",    # pyupgrade
    "W",     # pycodestyle
    "YTT",   # flake8-2020
]
ignore = [
    "A003",  # builtin-attribute-shadowing
]
fixable = [
    "I",     # isort
    "F401",  # unused-import
    "TID",   # flake8-tidy-imports
    "UP",    # pyupgrade
]
dummy-variable-rgx = "^_$"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG001"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "cerbottana.typedefs.RoomId",
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
split-on-trailing-comma = false
