[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:"]

[tool.coverage.run]
source = ["cerbottana"]


[tool.isort]
profile = "black"


[tool.mypy]
plugins = "sqlalchemy.ext.mypy.plugin"

strict = true
implicit_reexport = true

# Disallow dynamic typing
disallow_any_unimported = true
#disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true

show_error_codes = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
# pytest decorators leave functions untyped after transformation
disallow_any_decorated = false
disallow_any_explicit = false
disallow_untyped_defs = false
disallow_incomplete_defs = false


[tool.poe.env]
SQLALCHEMY_WARN_20 = "1"

[tool.poe.tasks]
format = ["isort", "black"]
isort = "isort cerbottana tests"
black = "black cerbottana tests"

tests = ["test"]
test = ["isort-check", "black-check", "darglint", "mypy", "pylint", "pytest-full"]
isort-check = "isort cerbottana tests --check"
black-check = "black cerbottana tests --check"
darglint = "darglint cerbottana tests -v 2"
mypy = "mypy cerbottana tests"
pylint = "pylint cerbottana tests --disable=fixme"
pytest-full = [
    {ref="pytest"},
    {shell="""
        dotenv get TESTS_MOD_USERNAME > /dev/null
        if [ $? -ne 0 ]
        then
            echo 'Skipping tests using a real Showdown instance'
        else
            poe pytest-real-ps-instance
        fi
    """},
]
pytest = "pytest -m 'not real_ps_instance'"
pytest-real-ps-instance = "pytest -m 'real_ps_instance'"


[tool.poetry]
name = "cerbottana"
version = "0.1.0"
description = ""
authors = ["Parnassius <Parnassius@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "3.8.3"
domify = "0.4.0"
imageprobe = "0.3.0"
python-dateutil = "2.8.2"
SQLAlchemy = "1.4.45"
typenv = "0.2.0"

[tool.poetry.group.dev.dependencies]
black = "22.12.0"
darglint = "1.8.1"
freezegun = "1.2.2"
isort = "5.11.4"
mypy = "0.991"
poethepoet = "0.16.5"
pylint = "2.15.9"
pytest = "7.2.0"
pytest-aiohttp = "1.0.4"
pytest-cov = "4.0.0"
pytest-mock = "3.10.0"
pytest-xprocess = "0.21.0"
sqlalchemy2-stubs = "0.0.2a31"
types-python-dateutil = "2.8.19.5"

[tool.poetry.scripts]
bot = "cerbottana.__main__:main"


[tool.pylint.main]
load-plugins = [
    "pylint.extensions.bad_builtin",
    "pylint.extensions.check_elif",
    "pylint.extensions.for_any_all",
    "pylint.extensions.typing",
]

[tool.pylint.messages_control]
disable = [
    "invalid-name",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "unused-argument",
    "too-few-public-methods",

    # temporarily disabled, should be re-enabled sooner or later
    "duplicate-code",  # encounters / locations plugins
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-statements",
]
enable = ["useless-suppression"]
fail-on = ["useless-suppression"]

[tool.pylint.format]
expected-line-ending-format = "LF"
max-line-length = "88"

[tool.pylint.typing]
runtime-typing = "no"


[tool.pytest.ini_options]
addopts = "--strict-config --strict-markers"
markers = ["real_ps_instance"]
asyncio_mode = "auto"
xfail_strict = true
